#!/usr/bin/env bash

[[ -s "/etc/bdsmrc" ]]  && . "/etc/bdsmrc"
[[ -s "$HOME/.bdsmrc" ]] && . "$HOME/.bdsmrc"

true "${prefix:=/usr/local}"
true "${bindir:=/usr/local/bin}"

if [[ "$prefix" = "$HOME" ]] ; then
  true "${bdsm_path:="${prefix}bdsm"}"
else
  true "${bdsm_path:="${prefix}/bdsm"}"
fi

scripts_path="${scripts_path:-"${bdsm_path}/scripts"}"
extensions_path="${extensions_path:-"${bdsm_path}/extensions"}"
templates_path="${templates_path:-"${bdsm_path}/templates"}"
config_path="${config_path:-"${bdsm_path}/config"}"
src_path="${src_path:-"${bdsm_path}/src"}"
bin_path="${bin_path:-"${bdsm_path}/bin"}"
archives_path="${archives_path:-"${bdsm_path}/archives"}"
remote="${remote:-"origin"}"
branch="${branch:-"master"}"
framework="${framework:-"rails"}"
timestamp="$(date +%m.%d.%Y-%H:%M:%S)"
user="$USER"
keep_releases=${keep_releases:-4}
hooks_flag="${hooks_flag:-1}"

project_path="${project_path:-$HOME}"
shared_path="${shared_path:-$project_path/shared}"
previous_path="${previous_path:-$project_path/previous}"
current_path="${current_path:-$project_path/current}"
stage_path="${stage_path:-$project_path/stage}"
discarded_path="${discarded_path:-$project_path/discard}"
pager="${PAGER:-cat -v}"

export project_path shared previous_path current_path stage_path discarded_path

# TODO: Move this code to a 'project' initializer:
if [[ $UID -gt 0 ]] ; then

  if [[ -z "$project" ]] ; then

    # TODO: Improve this line vv
    if [[ -d "$HOME/shared/$user" ]] ; then
      export project="$user"
    fi

  fi

  if [[ -d "$project_path/previous" ]] ; then

    old_releases="$(
    find "$project_path/previous/" -mindepth 1 -maxdepth 1 -type d |
    sort -r | awk "NR > ${keep_releases:-3} { print \$0 }"
    )"

  fi

  if [[ -n "$project" ]] ; then

    database_name="${database_name:-"${project}_${environment}"}"

    # TODO: Make this even more flexible. eg. check

    if [[ -z "$vcs" ]] ; then

      if [[ -d "$shared_path/$project/.git" ]] ; then

        vcs="git"

      elif [[ -d "$shared_path/$project/.svn" ]] ; then

        vcs="svn"

      elif [[ -d "$shared_path/$project/.hg" ]] ; then

        vcs="hg"

      else

        vcs="git" # default to awesome :)

      fi

    fi

    [[ -s ".${project}rc" ]] && . ".${project}rc"
  fi
fi

# In case bdsm is being called from within a hook for example, we unset these:
unset extension action

export vcs project database_name old_releases bdsm_path current_path discarded_path previous_path project_path shared_path archives_path bin_path bindir branch config_path extensions_path framework hooks_flag keep_releases prefix remote result scripts_path src_path templates_path timestamp user

result=0

trap 'rm -rf "/tmp/bdsm/$$" >/dev/null 2>&1' 0 1 2 3 15

