#!/usr/bin/env bash

export bdsm_path="${bdsm_path:-"${prefix}/bdsm"}"

if [ -z "$project" ] ; then
# TODO: Improve this line vv
  if [ -d $HOME/shared/$user ] ; then
    export project=$user
  fi
fi

export scripts_path="${scripts_path:-"${bdsm_path}/scripts"}"
export services_path="${services_path:-"${bdsm_path}/services"}"
export templates_path="${templates_path:-"${bdsm_path}/templates"}"
export config_path="${config_path:-"${bdsm_path}/config"}"
export remote=${remote:-"origin"}
export branch=${branch:-"master"}
export framework=${framework:-"rails"}
export keep_releases=${keep_releases:-"4"}
export timestamp="$(date +%m.%d.%Y-%H:%M:%S)"
export project_path="${project_path:-$HOME}"
export shared_path="${shared_path:-$project_path/shared}"
export current_path="${current_path:-$project_path/current}"
export current_path="${current_path:-$project_path/current}"
export RAILS_ENV="${RAILS_ENV:-"production"}"

result=0
user=$(whoami)

if [[ -d "$project_path/previous" ]] ; then
  old_releases="$(cd $project_path/previous && ls -t | awk "NR > $keep_releases { print \$0 }")"
fi

# TODO: Make this even more flexible. eg. check
if [[ -z "$vcs" ]] ; then
  if [[ -d "$shared_path/$project/.git" ]] ; then
    vcs="git"
  elif [[ -d "$shared_path/$project/.svn" ]] ; then
    vcs="svn"
  elif [[ -d "$shared_path/$project/.hg" ]] ; then
    vcs=hg
  else
    vcs="git" # default to awesome :)
  fi
fi

if [ -f ".${project}rc" ] ; then source ".${project}rc" ; fi

trap 'rm -rf "/tmp/bdsm/$$" >/dev/null 2>&1' 0 1 2 3 15

export user project remote branch framework keep_releases timestamp project_path current_path shared_path RAILS_ENV old_releases scripts_path vcs

