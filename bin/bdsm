#!/usr/bin/env bash

# Author: Wayne E. Seguin
# All Rights Reserved

#
# Setup
#
prefix="${prefix:-/usr/local}"
if [[ -s "$HOME/.bdsmrc" ]]     ; then source "$HOME/.bdsmrc" ; fi
source "${scripts_path:-"$prefix/bdsm/scripts"}"/initialize
source "${scripts_path}"/functions
result=0

VERSION="$(cat "$bdsm_path"/VERSION)"

function version {
  _author="Wayne E. Seguin"
  _author_email="wayneeseguin@gmail.com"
  _website="http://bdsm.beginrescueend.com/"
  _version="$VERSION"
  echo -e "bdsm ${_version} ${_website} by ${_author} (${_author_email})"
}

function usage {
  version
  "$services_path"/bdsm/help | ${PAGER:-less}
}

#
# parse args
#
while [ $# -gt 0 ] ; do
  token="$1" ; shift
  case "$token" in
    # TODO: service detection "did you mean"
    --project)         export project="$1"     ;;
    --environment)     export environment="$1" ;;
    --repo|repository) export repository="$1"  ;;
    --database)        export database="$1"    ;;
    --server)          export server="$1"      ;; # better name for this?
    --head)            export head_flag=1                                 ;;
    --trace)           export trace_flag=1 ; export debug_flag=1 ; set -x ;;
    --debug)           export debug_flag=1                                ;;
    -v|--version)      action="version"                                   ;;

    *)
      #if $scripts_path/match "$token" $services ; then
      if [[ -z "$service" ]] ; then
        if [[ -d "$services_path/$token" ]] ; then
          export service="$token"
        else
          export service="${service:-bdsm}"
        fi
      fi
      if [[ -z "$action" ]] ; then
        if [[ -x "$services_path/$service/$token" ]] ; then
          export action="$token"
          bdsm_args="$@"
          parse_break=1
        fi
      elif [[ -d "/data/$token" ]] ; then
        project="$token"
        project_path="/data/$token"
      elif [[ -d "/home/$token" ]] ; then
        project="$token"
        project_path="/home/$token"
      else
        # determine sanity of project
        action="error"
        error_message="Unrecognized command line argument(s): '$token $@'"
      fi
    ;;
  esac

  if [[ ! -z "$parse_break" ]] || [[ ! -z "$error_message" ]] ; then unset parse_break ; break; fi
done

if [[ ! -z "$error_message" ]] ; then exit 1 ; fi

#
# Main Logic
#
if [[ "$trace_flag" = 1 ]] ; then set -x ; else set +x ; fi

if [[ "version" = "$action" ]] ; then
  version
elif [[ ! -z "$service" ]] && [[ ! -z "$action" ]] ; then
  if [[ -z "$project" ]] ; then
    echo -e "\$project is unspecified." ; exit 1
  fi
  if [[ -s "$services_path/$service/$action" ]] ; then
    "$services_path/$service/$action" $*
  fi
elif [[ ! -z "$service" ]] ; then
  echo $(actions_for_service $service)
else
  usage
fi
result=$?

exit $result
