#!/usr/bin/env bash

if [[ "$trace_flag" -eq 1 ]] ; then set -x ; fi

#
# Sanity checks
#
if [[ "root" = $(whoami) ]] ; then
  $scripts_path/log "error" "bdsm extension $extension must be run as the project user and NOT root." ; exit 1
fi
for variable in project environment; do
  if [[ -z "$variable" ]] ; then
    $scripts_path/log "error" "$variable must be set for extension $extension." ; exit 1
  fi
done

for dir in config log pids sockets "public/assets" tmp  ; do
  mkdir -p "$project_path/shared/$dir"
done

#
# Ensure the .bdsmrc file and the profiles are setup properly.
#
touch $project_path/shared/config/database.yml $project_path/.bash_profile
if ! awk "/^project/" "$HOME/.bash_profile" ; then
  echo "export project=\"$(user)\"" >> $HOME/.bdsmrc
fi

if ! awk "/^environment/" "$HOME/.bash_profile" ; then
  echo "export environment=\"production\"" >> $HOME/.bdsmrc
fi

if ! awk "/^RAILS_ENV/" "$HOME/.bash_profile" ; then
  echo "export RAILS_ENV=\"\$environment\"" >> $HOME/.bdsmrc
fi

if [[ ! -z "$database" ]] ; then
  if ! awk "/^database/" "$HOME/.bash_profile" ; then
    echo "export database=\"production\"" >> $HOME/.bdsmrc
  fi
fi

if ! awk '/current\/\.bdsmrc/' "$HOME/.bash_profile" ; then
  echo 'if [[ -d $HOME/current ]] && [[ -f $HOME/current/.bdsmrc ]] ; then source $HOME/current/.bdsmrc ; fi' >> $HOME/.bash_profile
fi

if ! awk '/current\/\.rvmrc/' "$HOME/.bash_profile" ; then
  echo 'if [[ -d $HOME/current ]] && [[ -f $HOME/current/.rvmrc ]] ; then source $HOME/current/.rvmrc ; fi' >> $HOME/.bash_profile
fi
cp $HOME/.bash_profile $HOME/.bashrc

if [[ ! -s "$HOME/.rvm/scripts/rvm" ]] ; then
  mkdir -p $HOME/.rvm/src ; cd $HOME/.rvm/src
  if [[ -d rvm/.git ]] ; then
    cd rvm
    git reset --hard HEAD
    git pull origin "${rvm_branch:-master}"
    ./install
  else
    git clone git://github.com/wayneeseguin/rvm.git && cd rvm && ./install
  fi
  cd $HOME
fi

if [[ ! -s "$project_path/shared/config/database.yml" ]] ; then
  echo -e "${environment}: &defaults\n  adapter: ${database:-postgresql}\n  username: $project\n  password: '$project'\n  database: ${project}_${environment}\n  pool: 5\n  timeout: 5000" > "$project_path/shared/config/database.yml"
fi

if [[ -s "$project_path/shared/$project/.rvmrc" ]] ; then
  export rvm_install_on_use_flag=1
  "source $project_path/shared/$project/.rvmrc"
fi

if [[ ! -z "$database" ]] ; then
  if [[ "postgresql" = "$database" ]] ; then
    gem install pg --no-rdoc --no-ri
  elif [[ "mysql" = "$database" ]] ; then
    gem install mysql --no-rdoc --no-ri
  else
    gem install sqlite --no-rdoc --no-ri
  fi
fi

