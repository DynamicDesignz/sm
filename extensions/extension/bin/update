#!/usr/bin/env bash

source "$extension_scripts_path/initialize"

if [[ "$trace_flag" -eq 1 ]] ; then set -x ; fi

result=0 ; extensions="$1" ; shift
releases_url="${releases_url:-$($scripts_path/db "$config_path/bdsm" "releases_url")}"
extension_url="${extension_url:-$($scripts_path/db "$config_path/bdsm" "extension_url")}"
if [[ -z "$extensions" ]] ; then
  "$scripts_path"/log "error" "A extension must be specified." ; exit 1
fi
# TODO: Should we allow user installs?...
if [[ $UID -ne 0 ]] ; then
  "$scripts_path"/log "error" "extensions must be updated as root." ; exit 1
fi

for extension in ${extensions//,/ } ; do

  mkdir -p "$src_path"
  if [[ -n "$head_flag" ]] ; then
    if [[ ! -d "$src_path/$extension/.git" ]] ; then
      "$scripts_path"/log "info" "Updating $extension repository."
      cd "$src_path/$extension"/.git
      # TODO: Branch update logic.
      git pull origin "${branch:-master}"
    else
      "$scripts_path"/log "info" "Cloning $extension repository from $extension_repo_url."
      cd "$src_path/$extension/"
      # TODO: git/hg/svn detection, git for now
      git clone "$extension_repo_url"
    fi
  else
    rm -rf "$src_path/latest"
    mkdir -p "$src_path/latest"
    curl -O "$releases_url" | tar xf - -C "$src_path/latest"
    # TODO: error check and exit on error.
    cd "$src_path/latest"/bdsm-*
    ./install
  fi

done

exit $result
