#!/bin/sh

fetch_version()
{
  version=$(curl -s "${releases_url}/latest-version.txt" 2>/dev/null) ||
    fail "Unable to fetch version from ${releases_url}/latest-version.txt"
}

md5_match()
{ # TODO: switch this to using system module's os_* DSL
  local _archive="$1" _path

  if command_exists md5
  then
    archive_md5=$(md5 -q "${_archive}")
  elif command_exists md5sum
  then
    archive_md5=$(md5sum "${_archive}" | awk '{print $1')
  else
    for _path in /sbin /bin /usr/bin /usr/sbin
    do
      if [[ -x "${_path}/md5" ]]
      then
        archive_md5=$(${_path}/md5 -q "${_archive}")
      elif [[ -x "${_path}/md5sum" ]]
      then
        archive_md5=$(${_path}/md5sum "${_archive}" | awk '{print $1')
      fi
    done
  fi

  [[ "${archive_md5}" == "${md5}" ]]
}

install_latest()
{
  fetch_version
  install_release
}

install_release()
{
  archive="$archives_path/sm-${version}.tar.gz"

  md5=$(curl -s "${releases_url}/sm-${version}.tar.gz.md5" 2>/dev/null)

  if file_exists "${archive}" && ! md5_match
  then
    # Remove old installs, if they exist and have incorrect MD5 checksums.
    file_exists "$archives_path/sm-${version}.tar.gz" &&
      rm -f "$archives_path/sm-${version}.tar.gz"
  fi

  ensure_paths_exist "${archives_path}"

  #TODO make use of fetch_uri
  curl -s -L "${releases_url}/sm-${version}.tar.gz" -o "$archive"

  file_matches_md5 "${archive}" "${md5}" ||
    fail "
Archive package downloaded does not match its calculated MD5 checksum ${md5}:

  $archives_path/sm-${version}.tar.gz

Please retry the installation, and/or check your networking setup.

Halting installation.
"

  tar zxf "${archives_path}/sm-${version}.tar.gz" -C "$src_path/"

  enter "$src_path/sm-${version}"

  ensure_files_are_executable "install"

  "${PWD}/install"
}

install_remote()
{
  local remote="${1:-sm}"

  install_sm_scm "$(scm_identifier "$remote")" "$remote"
}

install_sm_scm()
{
  local remote="origin" dir="${1}" repo="${2:-sm}"

  modules ext/vcs

  ematch "${repo}" "^[[:alnum:]_-]+\/[[:alnum:]_-]+$" || repo="${repo}/sm"

  # TODO: This should update to/from repos path and/or archives path...
  fetch_uri "${repo}" "${src_path}/${dir}"

  enter "${src_path}/${dir}/"

  chmod 0755 ${PWD}/install ${PWD}/bin/*

  exec bash ${PWD}/install --trace="$trace_flags" --debug="$debug_flags"
}
