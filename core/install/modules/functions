#!/bin/sh

install_initialize()
{
  cleanse_paths=( external completion modules extensions )
  directories=( bin )
  binaries=( sm sm-ll smp )
  files=( LICENSE VERSION README.md )
  aux_paths=( log tmp src )
  configs=( user ) # TODO move this to /etc/sm/ and/or $HOME/.sm/
}

perform()
{
  enter "${initial_pwd}"
  "$*"
}

prepare_for_installation()
{
  local directory _path

  log_step "Ensuring that installation target path exists (${install_path})" \
    ensure_paths_exist "${install_path}"

  enter "${install_path}"

  for directory in "${cleanse_paths[@]}"
  do
    _path="${install_path}/${directory}"
    if path_exists "${_path}"
    then
      log_step "Removing old sm component path (${_path})"\
        rm -rf "${_path}"
    fi
  done

  log_step "Creating install path directories (${directories[*]} ${aux_paths[*]})" \
  ensure_paths_exist "${directories[@]}" "${aux_paths[@]}"
}

with_clean()
{
  local command="$1" target="$3" entity
  shift 3 || fail "Usage:\n\n  with_clean copy_{files,paths} to <target> list of files/paths"
  for entity in "$@"
  do
    rm -rf "${target}/${entity}"
  done
  "${command}" to "${target}" "$@"
}

install_core()
{
  local _dir

  log_step "Installing core directories (${directories[*]})" \
    with_clean copy_paths to "${install_path}/" "${directories[@]}"

  log_step "Installing core files (${files[*]})" \
    with_clean copy_files to "${install_path}" ${files[@]}

  log_step "Installing core extension set" \
    with_clean copy_paths to "${install_path}/" "core"
}

install_configuration_files()
{
  log_step "Ensuring configuration files exist (${configs[*]})"
  for config_file in "${configs[@]}"
  do
    ensure_files_exist "${install_path}/config/${config_file}"
  done
  log_step success
}

setup_shell_completion()
{
  local _prefix="/etc" _mode _name

  path_exists "${_prefix}/bash_completion.d" || return 0

  completion_prefix="${_prefix}/bash_completion.d"
  _name="sm.bash"
  _mode=0644
  # else
  #   completion_prefix="${_prefix}/profile.d"
  #   ensure_paths_exist "${_prefix}/profile.d/"
  #   _name="sm-completion.sh"
  #   _mode=0755
  # fi

  install_template "install/sm-completion.sh" \
    to "${completion_prefix}/${_name}"

  seed_template "${completion_prefix}/${_name}" \
    sm_path "${sm_path}"

  chmod_files "${_mode}" "${completion_prefix}/${_name}"
}

setup_profile_d()
{
  ensure_paths_exist "${profile_d_path}"

  if user_is_root
  then
    if os_is_darwin
    then
      file_contains /etc/profile "${profile_d_path}" || {
        install_template install/etc_profile to /etc/profile
        seed_template /etc/profile profile_d_path "${profile_d_path}"
      }
    fi
  else
    ensure_files_exist "$HOME/.profile" "$HOME/.bashrc" "$HOME/.bash_profile"

    file_contains "$HOME/.bashrc" "$HOME/.profile" ||
      write "if test -s \"$HOME/.profile\" ; then . \"$HOME/.profile\" ; fi"\
        append to "$HOME/.bashrc"

    file_contains "$HOME/.bash_profile" "$HOME/.bashrc" ||
      write "if test -s \"$HOME/.bashrc\" ; then . \"$HOME/.bashrc\" ; fi"\
        append to "$HOME/.bash_profile"

    file_contains "$HOME/.profile" "${profile_d_path}" ||
      write "\nif test -d '${profile_d_path}' ; then for profile in \"${profile_d_path}\"/*.sh ; do if test -x \"\$profile\" ; then . \"\$profile\" ; fi ; done ; unset profile ; fi" \
        append to "$HOME/.profile"
  fi

  file_exists "${profile_d_path}/sm.sh" &&
     file_contains "${profile_d_path}/sm.sh" "${install_path}/pkg/active/sbin" ||
     {
       # To prepend or postpend??? Because of selinux issues prepend for now.
       write "PATH=\"\${PATH}:${install_path}/bin:${install_path}/pkg/active/bin:${install_path}/pkg/active/sbin\"" \
         to "${profile_d_path}/sm.sh"

       chmod_files 0755 "${profile_d_path}/sm.sh"
     }
}

set_sm_path()
{
  replace_content "^sm_path=.*" with "sm_path=\"${install_path}\"" \
    in "${install_path}/bin/sm"

  replace_content "^sm_path=.*" with "sm_path=\"${install_path}\"" \
    in "${install_path}/bin/smp"

  replace_content "^saved_sm_path=.*" with "saved_sm_path=\"\${sm_path:-${install_path}}\"" \
    in "${install_path}/core/sm/modules/core/initialize"
}

make_binaries_executable()
{
  local _binary
  for _binary in "${binaries[@]}"
  do
    chmod_files 0755 "${install_path}/bin/${_binary}"
  done
}

install_sm()
{
  log "S{cripting,ystem,tack} Management (SM) Framework (Core) Installation:"

  prepare_for_installation

  perform install_core

  perform set_sm_path

  perform install_configuration_files

  perform setup_profile_d

  user_is_not_root || \
    log_step "Setting up sm shell completion (${completion_prefix}/${_name})" \
      perform setup_shell_completion

  log_step "Ensuring that binaries are executable" \
    make_binaries_executable

  succeed "S{cripting,ystem,tack} Management (SM) Framework (Core) installed."
}

