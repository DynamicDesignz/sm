#!/usr/bin/env bash

perform()
{
  enter "${initial_pwd}"
  "$*"
}

prepare_for_installation()
{
  local directory

  log_step "Ensuring that installation path exists." \
    ensure_paths_exist "${install_path}"

  enter "${install_path}"

  log_step "Creating installation paths."
  for directory in "${cleanse_paths[@]}"
  do
    if path_exists "./${directory}"
    then
      rm -rf "./${directory}"
    fi
  done
  log_step success

  ensure_paths_exist "${directories[@]}" "${aux_paths[@]}"
}

# make a copy of provided bdsm dependencies extensions if there is none
install_dependencies_extension_set()
{
  if command_exists git
  then # TODO: use tarball method for this and/or bundle it directly.
    sets_install "dependencies" "wayneeseguin/bdsm-dependencies"

    write "git://github.com/wayneeseguin/bdsm-dependencies.git" \
      to "${extension_sets_home}/dependencies/.uri"
  fi
}

migrate_ext()
{
  if path_exists "${install_path}/extensions"
  then
    if path_exists "${install_path}/extensions/ext" \
    && ! file_exists "${install_path}/extensions/ext/.uri"
    then
      log_step "  Migrating ext -> exts" \
        move_directory "${install_path}/extensions/ext" "${install_path}/exts"
    fi
    if path_exists "${install_path}/extensions/external" \
    && ! file_exists "${install_path}/extensions/external/.uri"
    then
      log_step "  Migrating external -> exts" \
        move_directory "${install_path}/extensions/external" "${install_path}/exts"
    fi
    if path_exists "${install_path}/extensions/builtin" \
    && ! file_exists "${install_path}/extensions/builtin/.uri"
    then
      log_step "  Removing old core(builtin)" \
        rm -rf "${install_path}/extensions/builtin"
    fi
    log_step "  Migrating extensions -> sets" \
      move_directory "${install_path}/extensions" "${extension_sets_home}/"
  fi
}

install_core()
{
  local _dir
  log_step "Installing core directories." \
    copy_paths --force to "${install_path}/" "${directories[@]}"

  log_step "Installing core files." \
    copy_files to "${install_path}" ${files[@]}

  log_step "Installing core extensions." \
    copy_paths --force to "${install_path}/" "core"
}

install_configuration_files()
{
  log_step "Ensuring configuration files exist."
  for config_file in "${configs[@]}"
  do
    ensure_files_exist "${install_path}/config/${config_file}"
  done
  log_step success
}

symlink_bdsm()
{
  chmod a+x "${install_path}/bin/bdsm" "${install_path}/bin/bdsm-ll"

  if variable_is_nonempty prefix_path && path_exists "${prefix_path}/bin"
  then
    log_step "Linking ${prefix_path}/bin/bdsm" \
      link --force "${install_path}/bin/bdsm" to "${prefix_path}/bin/bdsm"
  fi
}

setup_shell_completion()
{
  if user_is_root
  then
    log_step "Setting up bdsm shell completion."

    if path_exists "/etc/bash_completion.d"
    then
      completion_prefix="/etc/bash_completion.d"
    else
      completion_prefix="/etc/profile.d"
      ensure_paths_exist "/etc/profile.d/"
    fi

    copy_file \
      from "${install_path}/core/cli/modules/shell/completion/bash" \
      to "${completion_prefix}/bdsm-completion.sh" \
      mode 0755 owner "root"

    log_step success
  fi
}

setup_profile_d()
{
  ensure_paths_exist "${profile_d_path}"

  if user_is_root
  then
    if os_is_darwin
    then
      if ! file_contains /etc/profile "${profile_d_path}"
      then
        write "\nif test -d '${profile_d_path}' ; then for profile in \"${profile_d_path}\"/*.sh ; do if test -x \"\$profile\" ; then . \"\$profile\" ; fi ; done ; unset profile ; fi\n" \
          to /etc/profile
      fi
    fi
  else
    ensure_files_exist "$HOME/.profile" "$HOME/.bashrc" "$HOME/.bash_profile"

    if ! file_contains "$HOME/.bashrc" "$HOME/.profile"
    then
      write "if test -s \"$HOME/.profile\" ; then . \"$HOME/.profile\" ; fi"\
        append to "$HOME/.bashrc"
    fi

    if ! file_contains "$HOME/.bash_profile" "$HOME/.bashrc"
    then
      write "if test -s \"$HOME/.bashrc\" ; then . \"$HOME/.bashrc\" ; fi"\
        append to "$HOME/.bash_profile"
    fi

    if ! file_contains "$HOME/.profile" "${profile_d_path}"
    then
      write "\nif test -d '${profile_d_path}' ; then for profile in \"${profile_d_path}\"/*.sh ; do if test -x \"\$profile\" ; then . \"\$profile\" ; fi ; done ; unset profile ; fi\n" \
        append to "$HOME/.profile"
    fi
  fi

  if ! file_exists "${profile_d_path}/bdsm.sh" ||
     ! file_contains "${profile_d_path}/bdsm.sh" "${packages_path}/active/bin"
  then
    # To prepend or postpend??? Good discussion here...
    write "PATH=\"${packages_path}/active/bin:${packages_path}/active/sbin:\${PATH}\"\n" \
      to "${profile_d_path}/bdsm.sh"

    chmod_files 0755 "${profile_d_path}/bdsm.sh"
  fi
}

set_bdsm_path()
{
  replace_content "^bdsm_path=.*" with "bdsm_path=\"${install_path}\"" in "${install_path}/bin/bdsm"
  replace_content "^saved_bdsm_path=.*" with "saved_bdsm_path=\"\${bdsm_path:-${install_path}}\"" \
    in "${install_path}/core/bdsm/modules/shell/core/initialize"
}

install_bdsm()
{
  log "\nInstalling BDSM Framework to ${install_path}.\n"

  prepare_for_installation

  perform install_core

  perform set_bdsm_path

  perform install_configuration_files

  perform symlink_bdsm

  perform setup_shell_completion

  perform setup_profile_d

  perform migrate_ext

  perform install_dependencies_extension_set

  succeed "\nFramework installed to ${install_path} !\n"
}
