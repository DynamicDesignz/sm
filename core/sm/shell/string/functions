#!/bin/sh

__sm.string.contains()
{
  [[ " $2 " =~ " $1 " ]]
}

__sm.string.contains.key()
{
  [[ " $2 " =~ " $1=" ]]
}

__sm.string.starts()
{
  case "$2" in
    ($1*) return 0 ;;
  esac
  return 1
}

__sm.string.starts.with.one.of()
{
  __string=$1
  shift
  while (( $# ))
  do
    if __sm.string.starts "$1" "${__string}"
    then
      __sm_string_starts_with="$1"
      return 0
    fi
    shift
  done
  return 1
}

__sm.string.ends()
{
  case "$2" in
    (*$1) return 0 ;;
  esac
  return 1
}

__sm.string.number.of.words()
{
  local __words=( $1 )
  printf "${#__words[@]}\n"
}

__sm.string.to.function.name()
{
  local __string=( $@ ) IFS="."
  printf "${__string[*]}\n"
}

__sm.string.ematch()
{
  local _value="$1" _regex="$2" _result

  # Use grep for extended regexp.
  echo "${_value}" | grep -qE "${_regex}"
  _result=$?
  case ${_result} in
    0|1)
      # 0 & 1 are correct results.
      return ${_result}
      ;;
    *)
      fail "grep returned unknown error code: ${_result}"
      ;;
  esac
}
