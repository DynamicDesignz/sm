#!/usr/bin/env bash

: ${debug_flags:=""} ${debug_flag:=0} ${trace_flags:="-backtrace"} ${trace_flag:=0} ${var_debug_type_flag:="long"}
declare -a var_debug_flags

trace_filter_stack=()

set_ps4

# Do not exit on error
set +o errexit
# Exit on USR2 (send by backtrace to $APP_PID)
trap 'exit 1' USR2
# Store process pid for closing from backtrace
export APP_PID=$$

trap clean_tmp_logs EXIT

# Persist ERR handler
set -o errtrace
# Call backtrace on error
trap "backtrace \"A command has returned error code '(\$?)' without being handled.\"" ERR

# Persist function RETURN & DEBUG handler
set -o functrace
# Do not set trap ... RETURN here, set it on first -x

if [[ -n "${var_debug_flags[*]}" ]]
then
  var_debug_callback_initialize
  trap var_debug_callback DEBUG
fi

# Those two break error handling
#TODO: provide versions that do not break things ...
unset command_not_found
unset command_not_found_handle

#exec 1>&3        # log   output
#exec 2>&4        # debug output
#exec 3>&1        # log   output
#exec 4>&2        # debug output
#exec 5>&2        # error output
#exec 6>&2        # fail  output
#exec 7>/dev/null # commands stdout
#exec 8>&2        # commands stderr
