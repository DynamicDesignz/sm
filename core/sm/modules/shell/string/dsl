#!/bin/sh

# ## string\_contains()
# Validate if second string is part of first string.
# Return 0 if found.
string_contains()
{
  [[ " $1 " =~ " $2 " ]]
}

# ## string\_contains()
# Validate if second string is key in first string.
# Return 0 if found.
string_contains_key()
{
  [[ " $1 " =~ " $2=" ]]
}

# ## string\_append()
# Append second string to first string if not already present.
# Prints new string.
string_append()
{
  printf "$1" # always use string
  string_contains "$1" "$2" || printf " $2" # append if does not exist.
}

# ## string\_remove()
# Removes second string from first string, if present.
# Prints new string.
string_remove()
{
  local string=" $1 "        # wrap with spaces.
  string="${string// $2 / }" # remove second string.
  string="${string## }"      # remove spaces from beginning.
  string="${string%% }"      # remove spaces from end.
  printf "${string}"
}

options_check()
{
  # Do not use brackets; they slow things down a lot.
  ! string_contains "$1" "$2" || return 0

  string_contains "$1" "all" && ! string_contains "$1" "-$2"
}
