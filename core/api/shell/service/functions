#!/bin/sh

#
# SM Framework Extended Module ~ Service Module
#

# TODO: Rework this into a 1.0.0 module API
# Public API for managing and working with a single service.
# This is what is used by service extensions.
service()
{
  trace_filter service || set -o xtrace

  local _token _command _parameters
  _parameters=()

  while (( $# ))
  do
    _token="$1" && shift
    case "${_token}" in
      (*)
        if [[ -z "${_command}" ]]
        then
          _command="${_token}"
        else
          _parameters+=("${_token}")
        fi
    esac
  done

  # TODO: Think through parameters more...
  case "${_command}" in
    (start|stop|restart|reload|restart|setup|status|info|logtail|list|configcheck|usage|cli|setup|uninstall|pid|confd|initd|activate|deactivate|status|signal|initialize)
      __sm.service.${_command} "${_parameters[@]}"
      ;;
    (*)
      ;;
  esac
}

