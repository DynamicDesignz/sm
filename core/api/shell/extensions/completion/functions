#!/bin/sh

find_starting_action()
{
  trace_filter action_completion
  extensions_path="$1" extension="$2"
  shift || fail "Cannot detect extension existence;"\
    " No extension path was given."
  shift || fail "Cannot detect extension existence;"\
    " No extension name was given."

  local _action_params=("$@") _action_path _new_action_path
  local _rest_params=() _param_temp _action_params_length

  local _actions_root="${extensions_path}/${extension}/bin"
  local _map="${extensions_path}/${extension}/map"
  local _modules_root="${extensions_path}/${extension}/shell"
  local _actions_cache=() _found_actions=()

  initialize_filesystem_cache
  __sm.actions.cache.map.initialize
  __sm.modules.cache.map.initialize

  if (( ${#_actions_cache[@]} ))
  then
    _action_path="${_action_params[*]}"
    _action_path="${_action_path// //}"
    if action_cache_find_matching starting "${_action_path}"
    then
      local _candidate
      for _candidate in "${_found_actions[@]}"
      do
        _candidate="${_candidate%%=*}"
        printf "${_candidate//\// }\n"
      done
      return 0
    fi
  fi
  return 1
}

show_extension_names()
{
  extensions_path="$1"
  shift || fail "no path given"
  #$1 is ignored == "unused"
  local _patern=$2 _paths
  shopt -s nullglob
  _paths=( "${extensions_path}"/* )
  shopt -u nullglob

  for extension in "${_paths[@]}"
  do
    extension="${extension##*/}"
    case "${extension##*/}" in
      (\*) continue ;; #skip empty dirs
      (.*) continue ;; #skip hidden stuff
      (${_patern}*) printf "${extension}\n" ;;
      (*) [[ -n "${_patern}" ]] || printf "${extension}\n" ;;
    esac
  done
  return 1
}

extension_action_completion()
{
  trace_filter action_completion
  local _action_found=0 _extension_found=0 _extension_found_path cut_count last_char

  last_char="${extension_args:${#extension_args}-1:1}"
  local _args=( ${extension_args} )

  unset _args[${__sm_array_start}]
  _args=( ${_args[@]} )
  show_word=${#_args[@]}

  if __sm.extensions.in.paths detect_extension_existence "${_args[@]}"
  then
    show_word=$(( show_word - 1 ))
    _extension_found=1
    _extension_found_path="${extensions_path}"
  fi

  if [[ "${last_char}" == " " ]]
  then show_word=$(( show_word + 1 ))
  fi

  if (( show_word < 1 ))
  then show_word=1
  fi

  {
    if (( ${#_args[@]} == 0 ))
    then
      __sm.extensions.in.paths show_extension_names "unused" "${_args}" || true
    elif (( ${#_args[@]} == 1 )) && [[ "${last_char}" != " " ]]
    then
      __sm.extensions.in.paths show_extension_names "unused" "${_args}" || true
    else
      if (( _extension_found )) &&
        find_starting_action "${_extension_found_path}" "${_args[@]}"
      then
        _action_found=1
      fi
    fi

    if (( ! _action_found ))
    then
      __sm.cli.in.path find_starting_action "${_args[@]}" || true
    fi
  } | cut -d ' ' -f ${show_word} | sort -u | grep -v '^$' || true
  return 0
}
