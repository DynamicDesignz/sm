#!/usr/bin/env bash

#
# parse CLI arguments
#
while [[ $# -gt 0 ]] ; do

  token="$1" ; shift

  case "$token" in
    # TODO: extension detection "did you mean"

    # TODO: Fall back on default actions instead of specifying them here
    #       In case the user has set their default serfice in the environment.

    --disable-hooks)
      hooks_flag=0
      ;;

    --project)
      project="$1"
      shift
      ;;

    --environment)
      environment="$1"
      shift
      ;;

    --repo|repository)
      repository="$1"
      shift
      ;;

    --revision)
      revision="$1"
      shift
      ;;

    --user)
      user="$1"
      shift
      ;;

    --head)
      head_flag=1
      ;;

    --debug)
      debug_flag=1
      ;;

    -v|--version)
      extension="core"
      action="version"
      ;;

    --trace)
      trace_flag=1
      source "${modules_path}/bash/trace/initialize"
      ;;

    --) extension_args=("$@") # Stop processing arguments.
      ;;

    *)
      #if $modules_path/match "$token" $extensions ; then
      if [[ -z "$extension" ]] ; then
        if [[ -d "$extensions_path/$token" ]] ; then
          extension="$token"
        else
          case "$token" in
            list|ls)
              extension="ext"
              action="list"
              extension_args=("$@")
              parse_break=1
              ;;

            # TODO: enable default actions for an extension...
            deploy|rollback)
              extension="deploy"
              action="$token"
              parse_break=1
              ;;

            bdsmrc)
              extension="core"
              action="$token"
              parse_break=1
              ;;

            help)
              action="help"
              extension="${1:-core}"
              parse_break=1
              ;;

            get)
              extension="core"
              action="get"
              extension_args=("$@")
              parse_break=1
              ;;

            activate|enable)
              extension="ext"
              action="package"
              extension_args=("activate" "$@")
              parse_break=1
              ;;

            deactivate|disable)
              extension="ext"
              action="package"
              extension_args=("deactivate" "$@")
              parse_break=1
              ;;

            add|extend)
              extension="ext"
              action="install"
              extension_args=("$@")
              parse_break=1
              ;;

            ext|extension|extensions)
              extension="ext"
              ;;

            mod|module|modules)
              extension="mod"
              ;;

            edit|open)
              extension="ext"
              action="${token}"
              extension_args=("$@")
              parse_break=1
              ;;

            *)
              extension="${extension:-core}"
              ;;
          esac
        fi
      fi

      [[ ${parse_break:-0} -eq 1 ]] && break

      if [[ -z "$action" ]] ; then
        if [[ -x "${extensions_path}/${extension}/bin/$token" ]] ; then
          action="$token"
          extension_args=("$@")
          parse_break=1
        fi
      elif [[ -d "/data/$token" ]] ; then
        project="$token"
        project_path="/data/$token"
      elif [[ -d "/home/$token" ]] ; then
        project="$token"
        project_path="/home/$token"
      else
        # determine sanity of project
        action="error"
        error_message="Unrecognized command line argument(s): '$token $@'"
      fi
      ;;
  esac

  if [[ -n "$parse_break" || -n "$error_message" ]] ; then
    unset parse_break
    break
  fi

done

