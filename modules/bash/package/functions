#!/usr/bin/env bash

# Example Usage:
#
# define_package \
#   name "bash"
#   version "4.2"
#   url "ftp.gnu.org/gnu/bash/"
#
define_package()
{
  while [[ $# -gt 0 ]] ; do
    key="$1" ; shift
    if [[ -n "${1:-}" ]] ; then
      value="$1" ; shift
    else
      fail "${extension} : ${action} : define_package() : Missing value for key '${key}'"
    fi

    case "$key" in
      name)
        package_name="${value}"
        ;;
      version)
        package_version="${value}"
        ;;
      url)
        package_url="${value}"
        ;;
      md5_url)
        package_md5_url="${value}"
        ;;
      bin_path)
        bin_path="${value}"
        ;;
      prefix_path)
        prefix_path="${value}"
        ;;
      source_path)
        source_path="${value}"
        ;;
      archive_format)
        archive_format="${value}"
        ;;
      # TODO: Simplify into
      #(+([[[:alnum:]]|])_path|name|version|url|md5_url)
      #  eval "${key}=${value}"
      #  ;;
      *)
        fail "Unknown key for define_package() : '${key}' (value: ${value})"
      ;;
    esac
  done
}

# TODO: much more error checking and conditional branching.
build_package()
{
  ensure_nonempty \
    "package_name" \
    "package_version" \
    "archive_format"

  ensure_paths_exist "${source_path}"

  enter "${source_path}"

  fetch_package

  extract_package

  enter "${package}-${package_version}"

  configure_package

  make_package

  install_package
}

fetch_package_md5()
{
  true ${md5_url:=${1}.md5}
  curl \
    -L "${md5_url}/${package_file}.md5" \
    -o "${md5_url##*\/}"
}

fetch_package()
{
  true ${url:=$1}
  curl \
    -L "${url}/${package_file}" \
    -o "${url##*\/}"
}

extract_package()
{
  case "$1" in
    *.tar.gz|*.tgz|*.xz)
      tar zxf "${1}"
      ;;
    *.tar.bz2)
      tar jxf "${1}"
      ;;
    *.zip)
      unzip "${1}" -C ${source_path}
      ;;
    *)
      fail "Unknown archive format for ${1}"
      ;;
  esac
}

configure_package()
{
  ./configure ${configure_flags[@]:-}
}

make_package()
{
  # TODO: make this robust, -j4 for example.
  make
}

install_package()
{
  # TODO: make this robust
  make install
}

