#!/usr/bin/env bash
#
# In order to use the bdsm interactive project functions,
# source this file in your profiles, such as ~/.bash_profile, for example:
#
#   [[ -s "/usr/local/bdsm/modules/bash/project/interactive" ]] && source "/usr/local/bdsm/modules/bash/project/interactive"
#
true "${projects_path:="$HOME/projects"}" ; export projects_path

p()
{
  #
  # Project function.
  #
  # Project function,
  # cd into the first directory matching the parameters passed in
  #
  # Examples:
  #
  # user ~ $ p bdsm core
  # user ~/projects/bdsm/core $
  #
  # Partial prefix completion is also supported,
  # user ~ $ p bd e
  # user ~/projects/bdsm/extensions $
  #
  local _path pattern1 pattern2;
  if [[ "$PS4" = "+ " ]]
  then
    export PS4="+ \${BASH_SOURCE##\${bdsm_path}} \${FUNCNAME[0]:+\${FUNCNAME[0]}()} \${LINENO} > "
  fi

  pattern1="${1:-}"
  pattern2="${2:-}"

  true "${projects_path:="$HOME/projects"}"

  if [[ -n "${pattern1}" ]]
  then
    _path=$( find "$projects_path" -iname "${pattern1}*" -mindepth 1 -maxdepth 2 -type d | head -1)

    cd "$_path"

    if [[ -n "${pattern2}" ]]
    then
      _path=$( find "$_path" -iname "${pattern2}*" -mindepth 1 -maxdepth 1 -type d | head -1);
      cd "$_path"
    fi
  else
    echo "A project name or directory must be specified as the first parameter.";
  fi
}

pe()
{
  # Project edit function,
  # use the project switch function in addition to launching the editor.
  p $*
  ${EDITOR:-vim} .
}

po()
{
  # Project open function, use the project switch function in addition to
  # opening the filesystem directory.
  p $*
  open .
}

