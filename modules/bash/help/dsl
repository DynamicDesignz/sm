#!/usr/bin/env bash

#
# ## show_help
#
# Display help for the current extension based on settings declared in the help
# action.
#
# ### Input Parameters
#
# First parameter is the help section to display, default is all sections 'usage'.
#
# ### Stream Outputs
#
# Prints out formatted help sections to the calling environments STDOUT stream.
#
# ### Environmental effects
#
# None.
#
# ### Return Codes
#
# 0 for success.
#
# ### Failure Scenarios
#
# No failure scenarios currently.
#
# ### Usage Examples
#
#     user$ show_help usage
#
show_help()
{
  local _help_command _token

  while (( $# > 0 )) ; do
    _token="$1" ; shift
    case "${_token}" in
      desc*|description)
        _help_command="description"
        ;;
      actions)
        _help_command="actions"
        ;;
      usage)
        _help_command="usage"
        ;;
    esac
  done

  "${_help_command:-usage}"
}

#
# ## description
#
# Set the string that will be printed when the actions help section is output.
#
# ### Input Parameters
#
# First parameter is a string containing a description of the extension.
#
# ### Stream Outputs
#
# None.
#
# ### Environmental effects
#
# None.
#
# ### Return Codes
#
# 0 for success.
#
# ### Failure Scenarios
#
# Fails if no description is given.
#
# ### Usage Examples
#
#     user$ description "This extension handles X Y and Z."
#
description()
{
  [[ -n "$*" ]] || fail "No help description was given."

  help_description="$*"
}

#
# ## actions
#
# Set the string that will be printed when the actions help section is output.
#
# ### Input Parameters
#
# First parameter is a string of the action descriptions.
#
# ### Stream Outputs
#
# None.
#
# ### Environmental effects
#
# None.
#
# ### Return Codes
#
# 0 for success.
#
# ### Failure Scenarios
#
# Fails if no actions are given.
#
# ### Usage Examples
#
#     user$ actions "install  - Installs the extension..."
#
actions()
{
  [[ -n "$*" ]] || fail "No help actions were given."
  help_actions="$*"
}

#
# ## notes
#
# Define the notes help section content.
#
# ### Input Parameters
#
# First parameter is a string containing any notes for the notes section of the
# current extension's help output.
#
# ### Stream Outputs
#
# None.
#
# ### Environmental effects
#
# None.
#
# ### Return Codes
#
# 0 for success.
#
# ### Failure Scenarios
#
# No failure scenarios currently.
#
# ### Usage Examples
#
#     user$ notes "Help for this extension can be found in #beginrescueend on irc.freenode.net"
#
notes()
{
  help_notes="$*"
}

#
# ## dependencies
#
# Specify content for the dependencies section of the help command.
#
# ### Input Parameters
#
# First parameter is a string containing any dependencies for the dependencies
# section of the current extension's help output.
#
# ### Stream Outputs
#
# None.
#
# ### Environmental effects
#
# None.
#
# ### Return Codes
#
# 0 for success
#
# ### Failure Scenarios
#
# No failure scenarios currently.
#
# ### Usage Examples
#
#     user$ dependencies " * pcre"
#
dependencies()
{
  help_dependencies="$*"
}

#
# ## resources
#
# Specify content for the resources section of the help command.
#
# ### Input Parameters
#
# First parameter is a string containing any resources for the resources
# section of the current extension's help output.
#
# ### Stream Outputs
#
# None.
#
# ### Environmental effects
#
# None.
#
# ### Return Codes
#
# 0 for success
#
# ### Failure Scenarios
#
# No failure scenarios currently.
#
# ### Usage Examples
#
#     user$ resources "website: ..."
#
resources() {
  help_resources="$*"
}

#
# ## usage
#
# Display the usage help output of the command. This displays all help sections.
#
# ### Input Parameters
#
# None.
#
# ### Stream Outputs
#
# Prints all help sections to the STDOUT of the calling environment.
#
# ### Environmental effects
#
# None.
#
# ### Return Codes
#
# 0 for success
#
# ### Failure Scenarios
#
# No failure scenarios currently.
#
# ### Usage Examples
#
#     user$ usage
#
usage()
{
  bdsm_version

  log "\nbdsm ${bdsm_version} https://bdsm.beginrescueend.com/ by Wayne E. Seguin (wayneeseguin@gmail.com)"

  log "\nUsage\n\n    bdsm ${extension} <action> <<arguments>>"

  [[ -z "${help_description}" ]] ||
    log "\nDescription\n    BDSM ${help_description}"

  log "\nActions"
  [[ -z "${help_actions}" ]] ||
    log "${help_actions}"

  [[ -z "${help_notes}" ]] ||
    log "\nNotes\n${help_notes}"

  [[ -z "${help_dependencies}" ]] ||
    log "\nDependencies\n${help_dependencies}"

  [[ -z "${help_resources}" ]] ||
    log "\nResources\n${help_resources}"

  if [[ "${extension}" = "core" || "${extension}" = "<extension>" ]]
  then
    log "\nExtensions Installed\n\n  $(extensions_installed)"
    log "\nExtensions Available\n\n  $(extensions_available)"
  fi
}

